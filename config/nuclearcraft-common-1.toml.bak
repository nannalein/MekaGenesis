
[Processor]
	#Ticks
	base_time = 240
	#FE per Tick
	#Better use value multiple of 8
	base_power = 128
	#GT EU Amperage
	gteu_amperage = 2
	#GT EU direct support enabled?
	#0 - disabled, 1 - enabled EU and FE, 2 - EU only
	gteu_support = 1
	#Enable explosion on wrong GE EU amperage
	gteu_explode = false
	#Generally used for server optimization. Processors will skip defined amount of ticks then and do nothing.
	#This won't affect recipe production performance
	#Let's say it will skip 2 ticks, and then it will multiply recipe progress by amount if skipped ticks.
	#So it won't do the job each tick. But production will be the same as if it was done each tick.
	#This only works if processor has recipe in work
	#May lead to unknown issues, Please test first
	#Range: 0 ~ 10
	skip_ticks = 0
	#Allow processor registration: rock_crusher, decay_hastener, irradiator, nuclear_furnace, extractor, electrolyzer, pressurizer, alloy_smelter, melter, analyzer, ingot_former, pump, fuel_reprocessor, leacher, crystallizer, assembler, steam_turbine, supercooler, centrifuge, chemical_reactor, fluid_infuser, isotope_separator, fluid_enricher, gas_scrubber, manufactory
	register_processor = [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]
	#Processor power: rock_crusher, decay_hastener, irradiator, nuclear_furnace, extractor, electrolyzer, pressurizer, alloy_smelter, melter, analyzer, ingot_former, pump, fuel_reprocessor, leacher, crystallizer, assembler, steam_turbine, supercooler, centrifuge, chemical_reactor, fluid_infuser, isotope_separator, fluid_enricher, gas_scrubber, manufactory
	processor_power = [20, 20, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
	#Time for processor to proceed recipe: rock_crusher, decay_hastener, irradiator, nuclear_furnace, extractor, electrolyzer, pressurizer, alloy_smelter, melter, analyzer, ingot_former, pump, fuel_reprocessor, leacher, crystallizer, assembler, steam_turbine, supercooler, centrifuge, chemical_reactor, fluid_infuser, isotope_separator, fluid_enricher, gas_scrubber, manufactory
	processor_time = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200]

#Settings for ore generation
[ores]
	#List of dimensions to generate ores: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	dimensions = [[0, -4848], [0, -4848], [0, -4848], [0, -4848], [0, -4848], [0, -4848], [0, -4848], [0, -4848], [0, -4848], [0, -4848], [0, -4848]]
	#Enable ore registration: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	register_ore = [true, true, true, true, true, true, true, true, true, true, true]
	#Ore blocks per vein. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	vein_size = [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
	#Veins in chunk. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	veins_in_chunk = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
	#Minimal generation height. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	min_height = [-60, -60, -60, 4, -60, -60, -60, -60, 4, -60, 4]
	#Max generation height. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	max_height = [60, 0, 60, 60, 60, 60, 60, 60, 60, 60, 60]

#Settings for reactor fuel
[reactor_fuel]
	#Heat multiplier for boiling reactor.
	heat_multiplier = 3.24444444
	#Depletion multiplier. Affects how long fuel lasts.
	#Range: 0.0 ~ 1000.0
	depletion_multiplier = 100.0
	#Base Fuel Heat: len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_heat = [45.0, 87.5, 71.875, 65.0, 22.5, 117.5, 85.0, 900.0, 67.5, 525.0, 510.0, 121.875, 405.0, 50.0, 270.0, 140.0, 840.0, 75.0, 62.5, 705.0, 150.0, 145.0, 390.0, 375.0, 450.0, 870.0, 300.0]
	#Base Fuel Efficiency: len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_efficiency = [104, 119, 100, 157, 119, 128, 142, 176, 147, 123, 147, 109, 152, 142, 109, 138, 142, 104, 95, 133, 171, 166, 161, 100, 109, 171, 138]
	#Base Fuel Depletion Time (seconds): len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_depletion = [89, 143, 198, 98, 654, 67, 109, 90, 98, 143, 109, 137, 98, 208, 89, 68, 68, 120, 218, 83, 90, 48, 83, 218, 120, 48, 208]
	#Fuel Criticality: len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_criticallity = [77, 92, 103, 80, 257, 71, 82, 38, 79, 46, 40, 88, 39, 108, 38, 72, 36, 85, 112, 35, 78, 66, 35, 56, 42, 33, 53]

#Settings for heat sinks
[heat_sink]
	#Cooling rate H/t: prismarine, aluminum, manganese, glowstone, netherite, slime, gold, liquid_nitrogen, lithium, carobbiite, enderium, end_stone, tin, copper, fluorite, lapis, obsidian, purpur, cryotheum, villiaumite, magnesium, quartz, arsenic, liquid_helium, nether_brick, water, lead, diamond, iron, silver, boron, emerald, redstone
	cooling_rate = [115.0, 175.0, 150.0, 130.0, 150.0, 145.0, 120.0, 185.0, 130.0, 140.0, 120.0, 40.0, 120.0, 80.0, 160.0, 120.0, 40.0, 95.0, 160.0, 180.0, 110.0, 90.0, 135.0, 140.0, 70.0, 60.0, 60.0, 150.0, 80.0, 170.0, 160.0, 160.0, 90.0]
	#You can define blocks by block_name. So water_heat_sink will fall back to nuclearcraft:water_heat_sink. Or qualify it with namespace like some_mod:some_block.
	#Or use block tag key. #nuclearcraft:fission_reactor_casing will fall back to blocks with this tag. Do not forget to put #.
	#if you need AND condition, add comma separated values "block1", "block2" means AND condition
	#if you need OR condition, use | separator. "block1|block2" means block1 or block2
	#By default you have rule condition is 'At least 1'. So if you define some block, it will go in the rule as 'at least 1'
	#Validation options: >2 means at least 2 (use any number)
	#-2 means between, it is always 2 (opposite sides)
	#<2 means less than 2 (use any number)
	#=2 means exact 2 (use any number)
	#^3 means 3 blocks in the corner (shared vertex or edge). possible values 2 and 3
	#Default placement rules have all examples
	placement_explanations = ""
	prismarine = ["water_heat_sink"]
	aluminum = ["quartz_heat_sink", "lapis_heat_sink"]
	manganese = ["fission_reactor_solid_fuel_cell>2"]
	glowstone = ["#nuclearcraft:moderators>2"]
	netherite = ["obsidian_heat_sink", "fission_reactor_irradiation_chamber"]
	slime = ["water_heat_sink", "lead_heat_sink"]
	gold = ["water_heat_sink", "redstone_heat_sink"]
	liquid_nitrogen = ["copper_heat_sink", "purpur_heat_sink"]
	lithium = ["lead_heat_sink-2"]
	carobbiite = ["end_stone_heat_sink", "fission_reactor_irradiation_chamber"]
	enderium = ["#nuclearcraft:fission_reactor_casing^3"]
	end_stone = ["enderium_heat_sink"]
	tin = ["lapis_heat_sink-2"]
	copper = ["glowstone_heat_sink"]
	fluorite = ["gold_heat_sink", "prismarine_heat_sink"]
	lapis = ["fission_reactor_solid_fuel_cell", "#nuclearcraft:fission_reactor_casing"]
	obsidian = ["glowstone_heat_sink-2"]
	purpur = ["#nuclearcraft:fission_reactor_casing", "iron_heat_sink"]
	cryotheum = ["fission_reactor_solid_fuel_cell>2"]
	villiaumite = ["redstone_heat_sink", "end_stone_heat_sink"]
	magnesium = ["#nuclearcraft:fission_reactor_casing", "#